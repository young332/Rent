<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.0.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 커넥션 풀 -->
	<context:annotation-config></context:annotation-config>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg name="configuration"
			ref="hikariConfig" />
	</bean>

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/> -->
		 <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" /> 
<!-- 		 <property name="driverClassName" -->
<!-- 			value="com.mysql.cj.jdbc.Driver" />  -->
		<!-- mysql 서버 디비 돌릴때 -->
		<!-- <property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"/> -->
		<!-- 호스팅 할 때  -->
		<!-- <property name="jdbcUrl"
			value="jdbc:log4jdbc:mysql://localhost:3306/rent001?useSSL=false&amp;serverTimezone=Asia/Seoul&amp;allowPublicKeyRetrieval=true" /> -->
		
		<!-- 로컬돌릴 때  -->
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:mysql://rent001.cafe24.com:3306/rent001?useSSL=false&amp;serverTimezone=Asia/Seoul&amp;allowPublicKeyRetrieval=true" /> 
		<property name="username" value="rent001" />
		<property name="password" value="khkh001@" />
	</bean>


	<!-- 커넥션 풀에서 커넥션 얻어와서 작업할 놈 -->

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mapperLocations" -->
		<!-- value="classpath:mappers/*Mapper.xml"/> -->
	</bean>

	<!-- try~catch~finally -->

	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</bean>

	<mybatis-spring:scan
		base-package="com.kh.rent.login.mapper" />
	<mybatis-spring:scan
		base-package="com.kh.rent.admin.mapper" />
	<mybatis-spring:scan
		base-package="com.kh.rent.point.mapper" />
	<mybatis-spring:scan
		base-package="com.kh.rent.checkout.mapper" />
	<mybatis-spring:scan
		base-package="com.kh.rent.reserve.mapper" />
	<mybatis-spring:scan
		base-package="com.kh.rent.myPage.mapper" />
	<mybatis-spring:scan
		base-package="com.kh.rent.board.mapper" />



	<context:component-scan
		base-package="com.kh.rent.login.service" />
	<context:component-scan
		base-package="com.kh.rent.admin.service" />
	<context:component-scan
		base-package="com.kh.rent.point.service" />
	<context:component-scan
		base-package="com.kh.rent.reserve.service" />
	<context:component-scan
		base-package="com.kh.rent.myPage.service" />
	<context:component-scan
		base-package="com.kh.rent.checkout.service" />	
	<context:component-scan
		base-package="com.kh.rent.board.service" />	


	<!-- @Transactional 사용 가능하게 -->
	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
	
	
	<!-- 메일보내기 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="khproject2309@gmail.com" />
      <property name="password" value="cplm ahvb nlly ilzk" /> <!-- 앱비밀번호 -->
      <property name="javaMailProperties">
         <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
         </props>
      </property>
	</bean>
	
</beans>
